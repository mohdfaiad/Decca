/* Extract Database software:d:\deccadb\jcdata.gdb */
CREATE DATABASE "software:d:\deccadb\jcdata.gdb" PAGE_SIZE 1024 
;


/* Table: FWO_CAT, Owner: SYSDBA */
CREATE TABLE FWO_CAT (FWO_CAT CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        DESCRIPTION VARCHAR(30) CHARACTER SET BIG_5,
PRIMARY KEY (FWO_CAT));

/* Table: FWO_COST_ANALYSIS, Owner: SYSDBA */
CREATE TABLE FWO_COST_ANALYSIS (JOB_NO_1 CHAR(6) NOT NULL,
        JOB_NO_2 CHAR(2) DEFAULT " "
 NOT NULL,
        SUB_JOB_NO CHAR(4) NOT NULL,
        FWO_NO CHAR(4) NOT NULL,
        QUOT_ITEM_NO CHAR(8) NOT NULL,
        DESCRIPTION CHAR(30),
        QUOT_ITEM_UNIT CHAR(4),
        SECTION_NO CHAR(1) DEFAULT " "
,
        BUDGET_QTY DOUBLE PRECISION DEFAULT 0
,
        ACTUAL_QTY DOUBLE PRECISION DEFAULT 0
,
        STD_QTY DOUBLE PRECISION DEFAULT 0
,
        BUDGET_AMT NUMERIC(15, 2) default 0
,
        ACTUAL_AMT NUMERIC(15, 2) default 0
,
        STD_AMOUNT_AMT NUMERIC(15, 2) default 0
,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, FWO_NO, QUOT_ITEM_NO));

/* Table: FWO_COST_CAT, Owner: SYSDBA */
CREATE TABLE FWO_COST_CAT (JOB_NO_1 CHAR(6) NOT NULL,
        JOB_NO_2 CHAR(2) DEFAULT " "
 NOT NULL,
        FWO_NO CHAR(4) NOT NULL,
        JOB_COST_CAT CHAR(6) NOT NULL,
        JOB_COST_CAT_UNIT CHAR(4),
        REG_RATE NUMERIC(15, 2) DEFAULT 0.0
,
        PREM_RATE NUMERIC(15, 2) DEFAULT 0.0
,
        BUDGET_AMT NUMERIC(15, 2) DEFAULT 0.0
,
        BUDGET_QTY NUMERIC(15, 2) DEFAULT 0.0
,
        JOB_REG_QTY DOUBLE PRECISION DEFAULT 0
,
        JOB_PREM_QTY DOUBLE PRECISION DEFAULT 0.0
,
        JOB_REG_AMT NUMERIC(15, 2) default 0.0
,
        JOB_PREM_AMT NUMERIC(15, 2) default 0.0
,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, FWO_NO, JOB_COST_CAT));

/* Table: FWO_QUOT, Owner: SYSDBA */
CREATE TABLE FWO_QUOT (JOB_NO_1 CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        JOB_NO_2 CHAR(1) CHARACTER SET BIG_5 default " "
 NOT NULL,
        FWO_NO CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        QUOT_LINE_NO CHAR(5) CHARACTER SET BIG_5 NOT NULL,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, FWO_NO));

/* Table: JCCONTROL, Owner: SYSDBA */
CREATE TABLE JCCONTROL (CONTROL_KEY INTEGER NOT NULL,
        CURR_PERIOD DATE NOT NULL,
        USE_JOB_NO_2 CHAR(1) DEFAULT "N"
 NOT NULL,
        JOB_NO_1_LEN INTEGER NOT NULL,
        JOB_NO_2_LEN INTEGER DEFAULT 0
,
        SUB_JOB_NO_LEN INTEGER NOT NULL,
        FWO_NO_LEN INTEGER NOT NULL,
        LST_PERIOD DATE,
        USE_RETAIN_AP CHAR(1) DEFAULT "N"
 NOT NULL,
        USE_RETAIN_AR CHAR(1) DEFAULT "N"
 NOT NULL,
        USER_DEF_TITLE01 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE02 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE03 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE04 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE05 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE06 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE07 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE08 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE09 CHAR(10) CHARACTER SET BIG_5,
        USER_DEF_TITLE10 CHAR(10) CHARACTER SET BIG_5,
        USE_BILL_AC_BY_JOB CHAR(1) DEFAULT "N"
,
        BILL_AC CHAR(4) CHARACTER SET BIG_5,
        BILL_PROFIT_CTR_1 CHAR(2) CHARACTER SET BIG_5,
        BILL_PROFIT_CTR_2 CHAR(2) CHARACTER SET BIG_5,
        USE_FIELDS INTEGER default 0
,
        SITE_ID CHAR(1),
        MS_USER CHAR(4) CHARACTER SET BIG_5,
        MS_SITE_ID CHAR(1),
        SETUP_MODE CHAR(1),
PRIMARY KEY (CONTROL_KEY));

/* Table: JC_MLTS_DTL, Owner: SYSDBA */
CREATE TABLE JC_MLTS_DTL (SEQ_NO INTEGER NOT NULL,
        FIELD_NAME VARCHAR(15) CHARACTER SET BIG_5 NOT NULL,
        STR_FLD VARCHAR(800) CHARACTER SET BIG_5,
        BLOB_FLD BLOB SUB_TYPE 0 SEGMENT SIZE 80,
        DATE_FLD DATE);

/* Table: JC_MLTS_KEY, Owner: SYSDBA */
CREATE TABLE JC_MLTS_KEY (SEQ_NO INTEGER NOT NULL,
        TABLE_NAME VARCHAR(15) CHARACTER SET BIG_5 NOT NULL,
        OLD_TABLE_KEY VARCHAR(40) CHARACTER SET BIG_5,
        COMMAND CHAR(1),
        SITE_ID CHAR(1));

/* Table: JOB_CLAIM, Owner: SYSDBA */
CREATE TABLE JOB_CLAIM (JOB_NO_1 CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        JOB_NO_2 CHAR(1) CHARACTER SET BIG_5 NOT NULL,
        LINE_NO INTEGER default 0
 NOT NULL,
        SUB_JOB_NO CHAR(2) CHARACTER SET BIG_5,
        ACCUM_APPLY_AMT NUMERIC(15, 2) default 0
,
        APPLY_DATE DATE,
        ACCUM_CERT_AMT NUMERIC(15, 2) default 0
,
        CERT_DATE DATE,
        RECV_AMT NUMERIC(15, 2) default 0
,
        LAST_RECV_AMT DATE,
        COMMENT BLOB SUB_TYPE TEXT SEGMENT SIZE 80 CHARACTER SET BIG_5,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, LINE_NO));

/* Table: JOB_COST_CAT, Owner: SYSDBA */
CREATE TABLE JOB_COST_CAT (JOB_NO_1 CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        JOB_NO_2 CHAR(1) CHARACTER SET BIG_5 DEFAULT " "
 NOT NULL,
        SUB_JOB_NO CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        SUB_JOB_COST_CAT CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        JOB_COST_CAT_UNIT CHAR(2) CHARACTER SET BIG_5,
        REG_RATE NUMERIC(15, 2) DEFAULT 0
,
        PREM_RATE NUMERIC(15, 2) DEFAULT 0
,
        BUDGET_AMT NUMERIC(15, 2) DEFAULT 0
,
        BUDGET_QTY DOUBLE PRECISION DEFAULT 0
,
        JOB_REG_QTY DOUBLE PRECISION DEFAULT 0
,
        JOB_PREM_QTY DOUBLE PRECISION DEFAULT 0
,
        DRAFT_BUDGET_AMT NUMERIC(15, 2) DEFAULT 0
,
        DRAFT_BUDGET_QTY NUMERIC(15, 2) DEFAULT 0
,
        JOB_PREM_AMT NUMERIC(15, 2) DEFAULT 0.0
,
        JOB_REG_AMT NUMERIC(15, 2) DEFAULT 0.0
,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, SUB_JOB_NO, SUB_JOB_COST_CAT));

/* Table: JOB_COST_FILE, Owner: SYSDBA */
CREATE TABLE JOB_COST_FILE (JOB_COST_CAT CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        DESCRIPTION VARCHAR(10) CHARACTER SET BIG_5 NOT NULL,
        JOB_COST_TYPE CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        JOB_COST_CAT_UNIT CHAR(2) CHARACTER SET BIG_5,
        REG_RATE NUMERIC(9, 2) DEFAULT 0
,
        PREM_RATE NUMERIC(9, 2) DEFAULT 0
,
        SUB_JOB_COST_CAT CHAR(3) CHARACTER SET BIG_5,
PRIMARY KEY (JOB_COST_CAT));

/* Table: JOB_COST_TYPE, Owner: SYSDBA */
CREATE TABLE JOB_COST_TYPE (JOB_COST_CAT_TYPE CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        DESCRIPTION VARCHAR(10) CHARACTER SET BIG_5 NOT NULL,
        COST_CAT_SYSTEM CHAR(1) CHARACTER SET BIG_5 NOT NULL,
PRIMARY KEY (JOB_COST_CAT_TYPE));

/* Table: JOB_DETAIL, Owner: SYSDBA */
CREATE TABLE JOB_DETAIL (JOB_NO_1 CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        JOB_NO_2 CHAR(1) CHARACTER SET BIG_5 default " "
 NOT NULL,
        FWO_NO CHAR(2) CHARACTER SET BIG_5 default " "
 NOT NULL,
        JOB_COST_CAT CHAR(3) CHARACTER SET BIG_5 default " "
 NOT NULL,
        SUB_JOB_NO CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        SUB_JOB_COST_CAT CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        HIST_DATE DATE NOT NULL,
        SITE_NO INTEGER default 0
 NOT NULL,
        HIST_SEQ DATE NOT NULL,
        DOC_NO CHAR(5) CHARACTER SET BIG_5,
        DETAIL_TYPE CHAR(1) CHARACTER SET BIG_5,
        DETAIL_AMT NUMERIC(15, 2) default 0
,
        RETAIN_AMT NUMERIC(15, 2) default 0
,
        DETAIL_QTY DOUBLE PRECISION DEFAULT 0
,
        ITEM_NO CHAR(8) CHARACTER SET BIG_5,
        WHS_CODE CHAR(2) CHARACTER SET BIG_5,
        ITEM_UNIT_COST DOUBLE PRECISION DEFAULT 0
,
        ITEM_UNIT CHAR(2) CHARACTER SET BIG_5,
        INVC_NO CHAR(5) CHARACTER SET BIG_5,
        INVC_DATE DATE,
        CHQ_NO CHAR(5) CHARACTER SET BIG_5,
        CHQ_DATE DATE,
        USER_ID CHAR(4) CHARACTER SET BIG_5 NOT NULL,
        ACCT_NO CHAR(4) CHARACTER SET BIG_5,
        PFT_CTR_1 CHAR(2) CHARACTER SET BIG_5,
        PFT_CTR_2 CHAR(2) CHARACTER SET BIG_5,
        QTY_TYPE CHAR(1) default "R"
,
        COMMENT BLOB SUB_TYPE 0 SEGMENT SIZE 80,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, SUB_JOB_NO, SUB_JOB_COST_CAT, HIST_DATE, SITE_NO, HIST_SEQ));

/* Table: JOB_FILE, Owner: SYSDBA */
CREATE TABLE JOB_FILE (JOB_NO_1 CHAR(3) CHARACTER SET BIG_5 NOT NULL,
        JOB_NO_2 CHAR(1) CHARACTER SET BIG_5 default " "
 NOT NULL,
        DESCRIPTION VARCHAR(30) CHARACTER SET BIG_5 NOT NULL,
        JOB_STATUS CHAR(1) NOT NULL,
        JOB_TYPE CHAR(1) NOT NULL,
        BILL_CURRENCY CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        COST_CURRENCY CHAR(2) CHARACTER SET BIG_5 NOT NULL,
        LST_EST_DATE DATE,
        JOB_END_DATE DATE,
        TERRITORY CHAR(3),
        INCHARGE_PERSON CHAR(4) CHARACTER SET BIG_5,
        CREATE_DATE DATE NOT NULL,
        CREATED_BY CHAR(4) CHARACTER SET BIG_5 NOT NULL,
        CUSTOMER_NO CHAR(3) CHARACTER SET BIG_5,
        BILL_AC CHAR(4) CHARACTER SET BIG_5,
        BILL_PROFIT_CTR_1 CHAR(2) CHARACTER SET BIG_5,
        BILL_PROFIT_CTR_2 CHAR(2) CHARACTER SET BIG_5,
        COMMENT BLOB SUB_TYPE TEXT SEGMENT SIZE 80 CHARACTER SET BIG_5,
PRIMARY KEY (JOB_NO_1, JOB_NO_2));

/* Table: JOB_FWO, Owner: SYSDBA */
CREATE TABLE JOB_FWO (JOB_NO_1 CHAR(6) NOT NULL,
        JOB_NO_2 CHAR(2) DEFAULT " "
 NOT NULL,
        FWO_NO CHAR(4) DEFAULT " "
 NOT NULL,
        STATUS CHAR(1) DEFAULT "A"
 NOT NULL,
        SUB_JOB_NO CHAR(4) DEFAULT " "
 NOT NULL,
        DESCRIPTION VARCHAR(60) NOT NULL,
        CREATED_BY CHAR(8),
        CREATE_DATE DATE,
        FWO_LENGTH NUMERIC(15, 3) DEFAULT 0
,
        FWO_WIDTH NUMERIC(15, 3) DEFAULT 0
,
        FWO_HEIGHT NUMERIC(15, 3) DEFAULT 0
,
        FWO_UNIT CHAR(4),
        COMMENT BLOB SUB_TYPE TEXT SEGMENT SIZE 80,
        FWO_CAT CHAR(4),
        CHECKED_BY CHAR(8),
        CHECK_DATE DATE,
        QUOT_NO CHAR(8),
        UPDATE_SJ_BUDGET CHAR(1) DEFAULT "N"
,
        PRODUCT_CODE CHAR(16),
        PHOTO BLOB SUB_TYPE 0 SEGMENT SIZE 80,
        FWO_QTY NUMERIC(15, 2) default 1
,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, FWO_NO));

/* Table: SUBCONTRACT, Owner: SYSDBA */
CREATE TABLE SUBCONTRACT (SUBCONTRACT_NO CHAR(5) CHARACTER SET BIG_5 NOT NULL,
        CONTRACT_TITLE VARCHAR(30) CHARACTER SET BIG_5 NOT NULL,
        JOB_NO_1 CHAR(3) CHARACTER SET BIG_5,
        JOB_NO_2 CHAR(1) CHARACTER SET BIG_5,
        SUB_JOB_NO CHAR(2) CHARACTER SET BIG_5,
        VENDOR_NO CHAR(3) CHARACTER SET BIG_5,
        CONTRACT_SUM NUMERIC(15, 2) default 0
,
        CONTRACT_DATE DATE,
        WORK_START_DATE DATE,
        WORK_END_DATE DATE,
        RETENTION_AMT NUMERIC(15, 2) default 0
,
        RETENTION_LIMIT NUMERIC(15, 2) default	0
,
        EST_VO_AMT NUMERIC(15, 2) default 0
,
        DEPOSIT_AMT NUMERIC(15, 2) default	0
,
        WORKDONE_AMT NUMERIC(15, 2) default	0
,
        CERT_AMT NUMERIC(15, 2) default	0
,
        PAID_AMT NUMERIC(15, 2) default	0
,
        LAST_PAY_DATE DATE,
        STATUS CHAR(1) default	"N"
,
        CREATED_BY CHAR(4) CHARACTER SET BIG_5,
        CREATE_DATE DATE,
        COMMENT BLOB SUB_TYPE TEXT SEGMENT SIZE 80 CHARACTER SET BIG_5,
        SUB_JOB_COST_CAT CHAR(3) CHARACTER SET BIG_5 NOT NULL,
PRIMARY KEY (SUBCONTRACT_NO));

/* Table: SUBCONTRACT_DETAIL, Owner: SYSDBA */
CREATE TABLE SUBCONTRACT_DETAIL (SUBCONTRACT_NO CHAR(10) NOT NULL,
        LINE_NO INTEGER DEFAULT 0
 NOT NULL,
        CERT_NO CHAR(10),
        CERT_DATE DATE,
        INVC_NO CHAR(16) NOT NULL,
        ACCUM_APPLY_AMT NUMERIC(15, 2) DEFAULT 0
,
        APPLY_DATE DATE,
        ACCUM_CERT_AMT NUMERIC(15, 2),
        LAST_PAY_DATE DATE,
        VOUCHER_NO CHAR(10),
        COMMENT BLOB SUB_TYPE TEXT SEGMENT SIZE 80,
        PAID_AMT NUMERIC(15, 2),
        CERTIFICATE_DATE DATE,
PRIMARY KEY (SUBCONTRACT_NO, LINE_NO));

/* Table: SUB_JOB_FILE, Owner: SYSDBA */
CREATE TABLE SUB_JOB_FILE (JOB_NO_1 CHAR(6) NOT NULL,
        JOB_NO_2 CHAR(2) DEFAULT " "
 NOT NULL,
        SUB_JOB_NO CHAR(4) DEFAULT " "
 NOT NULL,
        DESCRIPTION VARCHAR(60) NOT NULL,
        SUB_JOB_STATUS CHAR(1) NOT NULL,
        CONTRACT_AMT NUMERIC(15, 2) DEFAULT 0
,
        COMPLETED_PCT NUMERIC(4, 2) DEFAULT 0
,
        SUB_JOB_END_DATE DATE,
        CREATE_DATE DATE,
        CREATED_BY CHAR(8),
        JOB_RETAIN_AP NUMERIC(15, 2) DEFAULT 0
,
        JOB_RETAIN_AR NUMERIC(15, 2) DEFAULT 0
,
        JOB_BILL_AMT NUMERIC(15, 2) DEFAULT 0
,
        JOB_AMT_PAID NUMERIC(15, 2) DEFAULT 0
,
        LST_BILL_DATE DATE,
        LST_PMT_DATE DATE,
        USER_DEF_FLD01 VARCHAR(30),
        USER_DEF_FLD02 VARCHAR(30),
        USER_DEF_FLD03 VARCHAR(30),
        USER_DEF_FLD04 VARCHAR(30),
        USER_DEF_FLD05 VARCHAR(30),
        USER_DEF_FLD06 VARCHAR(30),
        USER_DEF_FLD07 VARCHAR(30),
        USER_DEF_FLD08 VARCHAR(30),
        USER_DEF_FLD09 VARCHAR(30),
        USER_DEF_FLD10 VARCHAR(30),
        QUOT_NO CHAR(8),
        SITE_LOCATION VARCHAR(60),
        SUB_JOB_TYPE CHAR(1) DEFAULT "S"
,
        FINAL_CONT_AMT NUMERIC(15, 2),
        REQ_BUDGET CHAR(1) DEFAULT "Y"
,
        VO_TO_SUB_JOB_NO CHAR(4),
        JOB_REG_AMT NUMERIC(15, 2) DEFAULT 0
,
        JOB_PREM_AMT NUMERIC(15, 2) default 0
,
PRIMARY KEY (JOB_NO_1, JOB_NO_2, SUB_JOB_NO));

/* Table: WORK_GROUP, Owner: SYSDBA */
CREATE TABLE WORK_GROUP (WORK_GROUP CHAR(4) NOT NULL,
        DESCRIPTION VARCHAR(20),
        REG_RATE NUMERIC(9, 2) DEFAULT 0
,
        PREM_RATE NUMERIC(9, 2) DEFAULT 0
,
PRIMARY KEY (WORK_GROUP));

/*  Index definitions for all user tables */
CREATE INDEX FWO_COST_CATINDEX_FWO ON FWO_COST_CAT(JOB_NO_1, JOB_NO_2, JOB_COST_CAT, FWO_NO);
CREATE INDEX FWO_QUOTINDEX_QUOT ON FWO_QUOT(JOB_NO_1, JOB_NO_2, QUOT_LINE_NO, FWO_NO);
CREATE INDEX JOB_COST_FILE_CAT ON JOB_COST_FILE(SUB_JOB_COST_CAT, JOB_COST_CAT);
CREATE INDEX JOB_DETAILINDEX_FWO ON JOB_DETAIL(JOB_NO_1, JOB_NO_2, FWO_NO, JOB_COST_CAT, HIST_DATE, SITE_NO, HIST_SEQ);
CREATE INDEX JOB_DETAILINDEX_ITEM ON JOB_DETAIL(ITEM_NO, WHS_CODE, HIST_DATE, SITE_NO, HIST_SEQ);
CREATE INDEX JOB_FILEINDEX_CUSTOMER_NO ON JOB_FILE(CUSTOMER_NO, JOB_NO_1, JOB_NO_2);
CREATE INDEX JOB_FILEINDEX_TERRITORY ON JOB_FILE(TERRITORY, JOB_NO_1, JOB_NO_2);
CREATE UNIQUE INDEX JOB_FWO_IDX2 ON JOB_FWO(JOB_NO_1, JOB_NO_2, SUB_JOB_NO, FWO_NO);
CREATE INDEX SUBCONTRACTINDEX_JOB ON SUBCONTRACT(JOB_NO_1, JOB_NO_2, SUB_JOB_NO, SUBCONTRACT_NO);

CREATE GENERATOR JC_MULTISITE_SEQ;


/* View: VIEW_JOB_COST_CAT_BY_JOB, Owner: SYSDBA */
CREATE VIEW VIEW_JOB_COST_CAT_BY_JOB (JOB_NO_1, JOB_NO_2, SUB_JOB_COST_CAT, JOB_COST_CAT_UNIT, REG_RATE, PREM_RATE, BUDGET_AMT, BUDGET_QTY, JOB_REG_QTY, JOB_REG_AMT, JOB_PREM_QTY, JOB_PREM_AMT) AS

   SELECT JOB_NO_1,
          JOB_NO_2,
         SUB_JOB_COST_CAT,
         JOB_COST_CAT_UNIT ,
         SUM(REG_RATE) ,
         SUM(PREM_RATE) ,
         SUM(BUDGET_AMT),
         SUM(BUDGET_QTY),
         SUM(JOB_REG_QTY) ,
         SUM(JOB_REG_AMT),
         SUM(JOB_PREM_QTY) ,
         SUM(JOB_PREM_AMT)
  FROM JOB_COST_CAT 
  GROUP BY JOB_NO_1,
           JOB_NO_2,
          SUB_JOB_COST_CAT,
           JOB_COST_CAT_UNIT
;
COMMIT WORK;
SET AUTODDL OFF;
SET TERM ^ ;

/* Stored procedures */
CREATE PROCEDURE GET_SUB_FWO AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_JOBNO AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_JOB_NO AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_SUB_JOB_TOT_BY_JOB AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_JOB_COST_CAT_TOT_BY_JOB AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_JOB_COST_CAT_TOT_BY_CAT AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_JOB_COST_CAT_BY_JOB AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_FWO_COST_CAT_TOT_BY_FWO AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_COST_CAT_VIEW_BY_JOB AS BEGIN EXIT; END ^
CREATE PROCEDURE GET_COST_CAT_TOT_BY_SUB_JOB AS BEGIN EXIT; END ^

ALTER PROCEDURE GET_SUB_FWO (IJOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
IJOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
IFWO_NO CHAR(4) CHARACTER SET BIG_5)
RETURNS (OJOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
OJOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
OSUB_NO CHAR(4) CHARACTER SET BIG_5,
OFWO_NO CHAR(4) CHARACTER SET BIG_5,
OSTATUS CHAR(1),
ODESCRIPTION VARCHAR(60) CHARACTER SET BIG_5,
OQUOT_NO CHAR(8) CHARACTER SET BIG_5)
AS 
                                             
begin
  if (:iFWO_NO = '') then
  begin
    for select distinct Job_No_1,
          Job_No_2,
          sub_job_no,
          fwo_no,
          description ,
          status,
          quot_no               
        from Job_fwo
        where job_no_1 = :iJOB_NO_1
            and job_no_2 = :iJOB_NO_2
        order by Job_No_1, Job_No_2
        into :OJOB_NO_1 ,
             :OJOB_NO_2 ,
             :OSUB_NO,
             :OFWO_NO ,
             :ODESCRIPTION,
             :OSTATUS,
             :OQUOT_NO
      do
        suspend;
  end
  if (:iFWO_NO <> '') then
  begin
    for select distinct Job_No_1,
          Job_No_2,
          sub_job_no,
          fwo_no,
          description ,
          status,
          quot_no               
        from Job_fwo
        where job_no_1 = :iJOB_NO_1
            and job_no_2 = :iJOB_NO_2
            and FWO_NO like :iFWO_NO
        order by Job_No_1, Job_No_2
        into :OJOB_NO_1 ,
             :OJOB_NO_2 ,
             :OSUB_NO,
             :OFWO_NO ,
             :ODESCRIPTION,
             :OSTATUS,
             :OQUOT_NO
      do
        suspend;
  end
end
 ^

ALTER PROCEDURE GET_JOBNO RETURNS (OJOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
OJOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
ODESCRIPTION VARCHAR(60) CHARACTER SET BIG_5)
AS 
                                              
begin
  for select Job_No_1,
             Job_No_2,
             description 
        from Job_File
        order by Job_No_1, Job_No_2
        into :oJob_No_1,
             :oJob_No_2,
             :oDescription
    do
      suspend;
end
 ^

ALTER PROCEDURE GET_JOB_NO (IJOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
IJOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
ISUB_JOB_NO CHAR(4) CHARACTER SET BIG_5,
IFWO_NO CHAR(4) CHARACTER SET BIG_5)
RETURNS (OJOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
OJOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
ODESCRIPTION VARCHAR(60) CHARACTER SET BIG_5,
OINCHARGE_PERSON CHAR(8) CHARACTER SET BIG_5,
OJOB_STATUS CHAR(1))
AS 
                                            
begin
  if ((:iSUB_JOB_NO = '') and (:iFWO_NO = '')) then
  begin
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 = '')) then
    begin
      for select distinct Job_No_1,
               Job_No_2,
               description ,
               job_status,
               incharge_person
          from Job_File
          order by Job_No_1, Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
      do
        suspend;
    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 = '')) then
    begin
      for select distinct Job_No_1,
               Job_No_2,
               description ,
               job_status,
               incharge_person
          from Job_File
          where Job_No_1 like :iJob_No_1
          order by Job_No_1, Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
      do
        suspend;
    end
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 <> '')) then
    begin
      for select distinct Job_No_1,
               Job_No_2,
               description ,
               job_status,
               incharge_person
          from Job_File
          where Job_No_2 like :iJob_No_2
          order by Job_No_1, Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
      do
        suspend;
    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 <> '')) then
    begin
      for select distinct Job_No_1,
               Job_No_2,
               description ,
               job_status,
               incharge_person
          from Job_File
          where Job_No_1 like :iJob_No_1
            and Job_No_2 like :iJob_No_2
          order by Job_No_1, Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
      do
        suspend;
    end
  end
  
  if ((:iSUB_JOB_NO <> '') and (:iFWO_NO = '')) then
  begin
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 = '')) then
    begin
      for select distinct JOB.Job_No_1,
            JOB.Job_No_2,
            JOB.description ,
            JOB.job_status,
            JOB.incharge_person
          from SUB_JOB_FILE SUB,job_file JOB
          where SUB.SUB_JOB_NO like :iSUB_JOB_NO
            and SUB.job_no_1=JOB.job_no_1
            and SUB.job_no_2=JOB.job_no_2
          order by JOB.Job_No_1, JOB.Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
      do
        suspend;
    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 = '')) then
    begin
      for select distinct SUB.Job_No_1,
            SUB.Job_No_2,
            SUB.description ,
            SUB.sub_job_status,
            JOB.incharge_person
          from SUB_JOB_FILE SUB,job_file JOB
          where SUB.SUB_JOB_NO like :iSUB_JOB_NO
            and SUB.SUB_JOB_NO like :iJOB_NO_1
            and SUB.job_no_1=JOB.job_no_1
            and SUB.job_no_2=JOB.job_no_2
          order by Job_No_1, Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
      do
        suspend;
    end
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 <> '')) then
    begin
      for select distinct SUB.Job_No_1,
            SUB.Job_No_2,
            SUB.description ,
            SUB.sub_job_status,
            JOB.incharge_person
          from SUB_JOB_FILE SUB,job_file JOB
          where SUB.SUB_JOB_NO like :iSUB_JOB_NO
            and SUB.JOB_NO_2 like :iJOB_NO_2
            and SUB.job_no_1=JOB.job_no_1
            and SUB.job_no_2=JOB.job_no_2
          order by Job_No_1, Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
      do
        suspend;
    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 <> '')) then
    begin
      for select distinct JOB.Job_No_1,
          JOB.Job_No_2,
          JOB.description ,
          JOB.job_status,
          JOB.incharge_person
        from Job_File JOB,sub_job_file SUB
        where Job_No_1 like :iJob_No_1
            and Job_No_2 like :iJob_No_2
            and SUB.sub_job_no like :iSUB_JOB_no
            and JOB.job_no_1 = SUB.job_no_1
            and JOB.job_no_2 = SUB.job_no_2
        order by JOB.Job_No_1, JOB.Job_No_2
        into :oJob_No_1,
             :oJob_No_2,
             :oDescription,
             :ojob_Status,
             :oincharge_person
      do
        suspend;
    end
  end

  if ((:iSUB_JOB_NO = '') and (:iFWO_NO <> '')) then
  begin
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 = '')) then
    begin
      for  select distinct FWO.Job_No_1,
             FWO.Job_No_2,
             JOB.description ,
             JOB.INCHARGE_PERSON,
             FWO.status
           from job_fwo FWO,job_file JOB
           where FWO.fwo_no like :ifwo_no
             and FWO.job_no_1=JOB.job_no_1
             and FWO.job_no_2=JOB.job_no_2
           order by Job_No_1, Job_No_2
           into :oJob_No_1,
                :oJob_No_2,
                :Odescription, 
                :oincharge_person,
                :ojob_status
      do
        suspend;
    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 = '')) then
    begin
      for  select distinct FWO.Job_No_1,
             FWO.Job_No_2,
             JOB.description ,
             JOB.INCHARGE_PERSON,
             FWO.status
           from job_fwo FWO,job_file JOB
           where FWO.fwo_no like :ifwo_no
             and FWO.job_no_1 like :iJOB_NO_1
             and FWO.job_no_1=JOB.job_no_1
             and FWO.job_no_2=JOB.job_no_2
           order by Job_No_1, Job_No_2
           into :oJob_No_1,
                :oJob_No_2,
                :Odescription, 
                :oincharge_person,
                :ojob_status
      do
        suspend;
    end
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 <> '')) then
    begin
      for  select distinct FWO.Job_No_1,
             FWO.Job_No_2,
             JOB.description ,
             JOB.INCHARGE_PERSON,
             FWO.status
           from job_fwo FWO,job_file JOB
           where FWO.fwo_no like :ifwo_no
             and FWO.job_no_2 like :iJOB_NO_2
             and FWO.job_no_1=JOB.job_no_1
             and FWO.job_no_2=JOB.job_no_2
           order by Job_No_1, Job_No_2
           into :oJob_No_1,
                :oJob_No_2,
                :Odescription, 
                :oincharge_person,
                :ojob_status
      do
        suspend;
    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 <> '')) then
    begin
      for select distinct JOB.Job_No_1,
            JOB.Job_No_2,
            JOB.description ,
            JOB.job_status,
            JOB.incharge_person
          from Job_File JOB,JOB_FWO FWO
          where JOB.Job_No_1 like :iJob_No_1
            and JOB.Job_No_2 like :iJob_No_2
            and FWO.fwo_no   like :ifwo_no
            and JOB.job_no_1 = FWO.job_no_1
            and JOB.job_no_2 = FWO.job_no_2
          order by JOB.Job_No_1, JOB.Job_No_2
          into :oJob_No_1,
               :oJob_No_2,
               :oDescription,
               :ojob_Status,
               :oincharge_person
        do
          suspend;
    end
  end  
  
  if ((:iSUB_JOB_NO <> '') and (:iFWO_NO <> '')) then
  begin
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 = '')) then
    begin
      for select distinct JOB.Job_No_1,
               JOB.Job_No_2,
               JOB.description ,
               JOB.job_status,
               JOB.incharge_person
            from Job_File JOB,SUB_JOB_FILE SUB,JOB_FWO FWO
            where SUB.sub_job_no like :iSUB_JOB_NO
              and FWO.fwo_no like :iFWO_NO
              and JOB.job_no_1 = SUB.job_no_1
              and JOB.job_no_2 = SUB.job_no_2
              and JOB.job_no_1 = FWO.job_no_1
              and JOB.job_no_2 = FWO.job_no_2
              and SUB.job_no_1 = FWO.job_no_1
              and SUB.job_no_2 = FWO.job_no_2
            order by JOB.Job_No_1, JOB.Job_No_2
            into :oJob_No_1,
                 :oJob_No_2,
                 :oDescription,
                 :ojob_Status,
                 :oincharge_person
        do
          suspend;

    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 = '')) then
    begin
      for select distinct JOB.Job_No_1,
               JOB.Job_No_2,
               JOB.description ,
               JOB.job_status,
               JOB.incharge_person
            from Job_File JOB,SUB_JOB_FILE SUB,JOB_FWO FWO
            where JOB.Job_No_1 like :iJob_No_1
              and SUB.sub_job_no like :iSUB_JOB_NO
              and FWO.fwo_no like :iFWO_NO
              and JOB.job_no_1 = SUB.job_no_1
              and JOB.job_no_2 = SUB.job_no_2
              and JOB.job_no_1 = FWO.job_no_1
              and JOB.job_no_2 = FWO.job_no_2
              and SUB.job_no_1 = FWO.job_no_1
              and SUB.job_no_2 = FWO.job_no_2
            order by JOB.Job_No_1, JOB.Job_No_2
            into :oJob_No_1,
                 :oJob_No_2,
                 :oDescription,
                 :ojob_Status,
                 :oincharge_person
          do
            suspend;
    end
    if ((:iJOB_NO_1 = '') and (:iJOB_NO_2 <> '')) then
    begin
      for select distinct JOB.Job_No_1,
               JOB.Job_No_2,
               JOB.description ,
               JOB.job_status,
               JOB.incharge_person
            from Job_File JOB,SUB_JOB_FILE SUB,JOB_FWO FWO
            where JOB.Job_No_2 like :iJob_No_2
              and SUB.sub_job_no like :iSUB_JOB_NO
              and FWO.fwo_no like :iFWO_NO
              and JOB.job_no_1 = SUB.job_no_1
              and JOB.job_no_2 = SUB.job_no_2
              and JOB.job_no_1 = FWO.job_no_1
              and JOB.job_no_2 = FWO.job_no_2
              and SUB.job_no_1 = FWO.job_no_1
              and SUB.job_no_2 = FWO.job_no_2
            order by JOB.Job_No_1, JOB.Job_No_2
            into :oJob_No_1,
                 :oJob_No_2,
                 :oDescription,
                 :ojob_Status,
                 :oincharge_person
       do
         suspend;
    end
    if ((:iJOB_NO_1 <> '') and (:iJOB_NO_2 <> '')) then
    begin
      for select distinct JOB.Job_No_1,
               JOB.Job_No_2,
               JOB.description ,
               JOB.job_status,
               JOB.incharge_person
            from Job_File JOB,SUB_JOB_FILE SUB,JOB_FWO FWO
            where JOB.Job_No_1 like :iJob_No_1
              and JOB.Job_No_2 like :iJob_No_2
              and SUB.sub_job_no like :iSUB_JOB_NO
              and FWO.fwo_no like :iFWO_NO
              and JOB.job_no_1 = SUB.job_no_1
              and JOB.job_no_2 = SUB.job_no_2
              and JOB.job_no_1 = FWO.job_no_1
              and JOB.job_no_2 = FWO.job_no_2
              and SUB.job_no_1 = FWO.job_no_1
              and SUB.job_no_2 = FWO.job_no_2
            order by JOB.Job_No_1, JOB.Job_No_2
            into :oJob_No_1,
                 :oJob_No_2,
                 :oDescription,
                 :ojob_Status,
                 :oincharge_person
          do
            suspend;
    end
  end  
end
 ^

ALTER PROCEDURE GET_SUB_JOB_TOT_BY_JOB (JOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
JOB_NO_2 CHAR(2) CHARACTER SET BIG_5)
RETURNS (JOB_COUNT INTEGER,
JOB_REG_AMT NUMERIC(15, 2),
JOB_PREM_AMT NUMERIC(15, 2),
JOB_BILL_AMT NUMERIC(15, 2),
JOB_AMT_PAID DOUBLE PRECISION,
JOB_RETAIN_AP DOUBLE PRECISION,
JOB_RETAIN_AR DOUBLE PRECISION)
AS 
      
begin
  SELECT count(Job_No_1),
         SUM(JOB_REG_AMT),
         SUM(JOB_PREM_AMT),
         SUM(JOB_BILL_AMT),
         SUM(JOB_AMT_PAID),
         SUM(JOB_RETAIN_AP),
         SUM(JOB_RETAIN_AR)
    FROM sub_job_file
    where Job_No_1 = :Job_No_1
      and Job_No_2 = :Job_No_2
    into :Job_Count,:Job_Reg_Amt, :Job_Prem_Amt, 
         :Job_Bill_Amt,:Job_Amt_Paid,
         :Job_Retain_AP, :Job_Retain_AR;
  suspend;
end
 ^

ALTER PROCEDURE GET_JOB_COST_CAT_TOT_BY_JOB (JOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
JOB_NO_2 CHAR(2) CHARACTER SET BIG_5)
RETURNS (JOB_COUNT INTEGER,
BUDGET_AMT NUMERIC(15, 2),
JOB_REG_AMT NUMERIC(15, 2),
JOB_PREM_AMT NUMERIC(15, 2))
AS 
              
begin
  SELECT count(Job_No_1),        
         sum(BUDGET_AMT),
         sum(JOB_REG_AMT),
         sum(JOB_PREM_AMT)
    from JOB_COST_CAT
    where (JOB_NO_1 = :JOB_NO_1)
      and (JOB_NO_2 = :JOB_NO_2)
     into :Job_Count,
          :BUDGET_AMT,
          :JOB_REG_AMT,
          :JOB_PREM_AMT;
  suspend;
end
 ^

ALTER PROCEDURE GET_JOB_COST_CAT_TOT_BY_CAT (JOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
JOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
SUB_JOB_COST_CAT CHAR(6) CHARACTER SET BIG_5)
RETURNS (JOB_COUNT INTEGER,
REG_RATE NUMERIC(15, 2),
PREM_RATE NUMERIC(15, 2),
BUDGET_AMT NUMERIC(15, 2),
BUDGET_QTY DOUBLE PRECISION,
JOB_REG_QTY DOUBLE PRECISION,
JOB_REG_AMT NUMERIC(15, 2),
JOB_PREM_QTY DOUBLE PRECISION,
JOB_PREM_AMT NUMERIC(15, 2))
AS 
      
begin
  SELECT count(job_no_1),
         SUM(REG_RATE) ,
         SUM(PREM_RATE) ,
         SUM(BUDGET_AMT),
         SUM(BUDGET_QTY),
         SUM(JOB_REG_QTY) ,
         SUM(JOB_REG_AMT),
         SUM(JOB_PREM_QTY) ,
         SUM(JOB_PREM_AMT)
  FROM JOB_COST_CAT
  where job_no_1 = :job_no_1
    and job_no_2 = :job_no_2
    and SUB_job_cost_cat = :SUB_job_cost_cat
  GROUP BY JOB_NO_1,
           JOB_NO_2,
           SUB_JOB_COST_CAT
  into :job_count,
       :REG_RATE ,
       :PREM_RATE ,
       :BUDGET_AMT,
       :BUDGET_QTY,
       :JOB_REG_QTY,
       :JOB_REG_AMT,
       :JOB_PREM_QTY,
       :JOB_PREM_AMT;
  suspend;
end
 ^

ALTER PROCEDURE GET_JOB_COST_CAT_BY_JOB (JOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
JOB_NO_2 CHAR(2) CHARACTER SET BIG_5)
RETURNS (SUB_JOB_COST_CAT CHAR(6) CHARACTER SET BIG_5,
REG_RATE DOUBLE PRECISION,
PREM_RATE DOUBLE PRECISION,
BUDGET_AMT NUMERIC(15, 2),
BUDGET_QTY DOUBLE PRECISION,
JOB_REG_QTY DOUBLE PRECISION,
JOB_REG_AMT NUMERIC(15, 2),
JOB_PREM_QTY DOUBLE PRECISION,
JOB_PREM_AMT NUMERIC(15, 2))
AS 
                          
begin
  SELECT SUB_Job_Cost_Cat,
         sum(REG_RATE),
         sum(PREM_RATE),
         sum(Budget_Amt),
         sum(Budget_Qty),
         sum(Job_Reg_Qty),
         sum(Job_Reg_Amt),
         sum(Job_Prem_Qty),
         sum(Job_Prem_Amt)
    from JOB_COST_CAT
    where (JOB_NO_1 = :Job_No_1)
      and (JOB_NO_2 = :Job_No_2)
    group by Job_No_1, Job_No_2, SUB_Job_Cost_Cat
     into :SUB_Job_Cost_Cat,
          :REG_RATE,
          :PREM_RATE,
          :Budget_Amt,
          :Budget_Qty,
          :Job_Reg_Qty,
          :Job_Reg_Amt,
          :Job_Prem_Qty,
          :Job_Prem_Amt;
  suspend;
end
 ^

ALTER PROCEDURE GET_FWO_COST_CAT_TOT_BY_FWO (JOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
JOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
FWO_NO CHAR(4) CHARACTER SET BIG_5)
RETURNS (JOB_COUNT INTEGER,
BUDGET_AMT NUMERIC(15, 2),
JOB_REG_AMT NUMERIC(15, 2),
JOB_PREM_AMT NUMERIC(15, 2))
AS 
        
begin
  SELECT count(job_no_1),
         SUM(BUDGET_AMT),
         SUM(JOB_REG_AMT),
         SUM(JOB_PREM_AMT)
    FROM FWO_COST_CAT
    where Job_No_1 = :Job_No_1
      and Job_No_2 = :Job_No_2
      and FWO_No = :FWO_No
    into :job_count, 
         :Budget_Amt, 
         :Job_Reg_Amt, 
         :Job_Prem_Amt;
end
 ^

ALTER PROCEDURE GET_COST_CAT_VIEW_BY_JOB (OJOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
OJOB_NO_2 CHAR(2) CHARACTER SET BIG_5)
RETURNS (JOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
JOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
SUB_JOB_COST_CAT CHAR(6) CHARACTER SET BIG_5,
JOB_COST_CAT_UNIT CHAR(4) CHARACTER SET BIG_5,
REG_RATE NUMERIC(15, 2),
PREM_RATE NUMERIC(15, 2),
BUDGET_AMT NUMERIC(15, 2),
BUDGET_QTY DOUBLE PRECISION,
JOB_REG_QTY DOUBLE PRECISION,
JOB_REG_AMT NUMERIC(15, 2),
JOB_PREM_QTY DOUBLE PRECISION,
JOB_PREM_AMT NUMERIC(15, 2))
AS 
                    
begin
  SELECT JOB_NO_1,
         JOB_NO_2,
         SUB_JOB_COST_CAT,
         JOB_COST_CAT_UNIT ,
         SUM(REG_RATE) ,
         SUM(PREM_RATE) ,
         SUM(BUDGET_AMT),
         SUM(BUDGET_QTY),
         SUM(JOB_REG_QTY) ,
         SUM(JOB_REG_AMT),
         SUM(JOB_PREM_QTY) ,
         SUM(JOB_PREM_AMT)
    FROM JOB_COST_CAT
   WHERE (JOB_NO_1 = :OJOB_NO_1)
     and (JOB_NO_2 = :OJOB_NO_2)
  GROUP BY JOB_NO_1,
           JOB_NO_2,
           SUB_JOB_COST_CAT,
           JOB_COST_CAT_UNIT 
    into :JOB_NO_1,
         :JOB_NO_2,
         :SUB_JOB_COST_CAT,
         :JOB_COST_CAT_UNIT ,
         :REG_RATE,
         :PREM_RATE,
         :BUDGET_AMT,
         :BUDGET_QTY,
         :JOB_REG_QTY,
         :JOB_REG_AMT,
         :JOB_PREM_QTY,
         :JOB_PREM_AMT;
  suspend;
enD
 ^

ALTER PROCEDURE GET_COST_CAT_TOT_BY_SUB_JOB (JOB_NO_1 CHAR(6) CHARACTER SET BIG_5,
JOB_NO_2 CHAR(2) CHARACTER SET BIG_5,
SUB_JOB_NO CHAR(4) CHARACTER SET BIG_5)
RETURNS (JOB_COUNT INTEGER,
BUDGET_AMT NUMERIC(15, 2),
JOB_REG_AMT NUMERIC(15, 2),
JOB_PREM_AMT NUMERIC(15, 2))
AS 
                
begin
  SELECT count(Job_No_1),
         sum(BUDGET_AMT),
         sum(JOB_REG_AMT),
         sum(JOB_PREM_AMT)
    FROM JOB_COST_CAT
   WHERE (JOB_NO_1 = :JOB_NO_1)
     and (JOB_NO_2 = :JOB_NO_2)
     and (SUB_JOB_NO =:SUB_JOB_NO)
    into :Job_Count,
         :BUDGET_AMT,
         :JOB_REG_AMT,
         :JOB_PREM_AMT;
  suspend;
end
 ^
SET TERM ; ^
COMMIT WORK ;
SET AUTODDL ON;
SET TERM ^ ;

/* Triggers only will work for SQL triggers */
CREATE TRIGGER JOB_FILE_UPDATE FOR JOB_FILE                        
ACTIVE AFTER UPDATE POSITION 0 
as 
begin
  if ((old.Job_No_1 <> new.Job_No_1) or
     (old.Job_No_2 <> new.Job_No_2)) then
  begin
    update FWO_COST_CAT
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

    update FWO_COST_ANALYSIS
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

    update FWO_QUOT
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

    update Job_Fwo
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
      where Job_No_1 = old.Job_No_1
        and Job_No_2 = old.Job_No_2;

    update Sub_Job_File
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
      where Job_No_1 = old.Job_No_1
        and Job_No_2 = old.Job_No_2;

    update Job_Claim
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
      where Job_No_1 = old.Job_No_1
        and Job_No_2 = old.Job_No_2;

    update SubContract
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
      where Job_No_1 = old.Job_No_1
        and Job_No_2 = old.Job_No_2;

    update Job_DETAIL
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2
      where Job_No_1 = old.Job_No_1
        and Job_No_2 = old.Job_No_2;
  end
end
 ^
CREATE TRIGGER SUBCONTRACT_UPDATE FOR SUBCONTRACT                     
ACTIVE AFTER UPDATE POSITION 0 
as 
begin
  if ((old.Job_No_1 <> new.Job_No_1) or
     (old.Job_No_2 <> new.Job_No_2) or
     (old.Subcontract_No <> new.Subcontract_No)) then
  begin
    update Subcontract_Detail
      set Job_No_1 = new.Job_No_1,
          Job_No_2 = new.Job_No_2,
          Subcontract_No = new.Subcontract_No
      where Subcontract_No = old.Subcontract_No
        and Job_No_1 = old.Job_No_1
        and Job_No_2 = old.Job_No_2;
  end
end
 ^
CREATE TRIGGER SUBCONTRACT_DELETE FOR SUBCONTRACT                     
ACTIVE AFTER DELETE POSITION 0 
as 
begin
  delete from Subcontract_Detail
    where Subcontract_No = old.Subcontract_No;
end
 ^
CREATE TRIGGER JOB_FILE_DELETE FOR JOB_FILE                        
ACTIVE AFTER DELETE POSITION 0 
as 
begin
  delete from Job_Fwo
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from Sub_Job_File
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from Job_Claim
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from Subcontract
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from FWO_COST_CAT
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from FWO_COST_ANALYSIS
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from FWO_QUOT
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from Job_DETAIL
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;

  delete from Job_FWO
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2;
end
 ^
CREATE TRIGGER JOB_COST_FILE_UPDATE FOR JOB_COST_FILE                   
ACTIVE BEFORE UPDATE POSITION 0 
as
begin
  if (new.job_cost_cat <> old.job_cost_cat) then
  begin
    update job_DETAIL
      set job_cost_cat = new.job_cost_cat
      where job_cost_cat = old.job_cost_cat;

    update FWO_COST_CAT
      set job_cost_cat = new.job_cost_cat
      where job_cost_cat = old.job_cost_cat;

  end
end
 ^
CREATE TRIGGER JOB_COST_FILE_DELETE FOR JOB_COST_FILE                   
ACTIVE AFTER UPDATE POSITION 0 
AS
BEGIN
  delete from Job_DETAIL
    where JOB_COST_CAT = old.Job_COST_CAT;
  delete from FWO_COST_CAT
    where JOB_COST_CAT = old.Job_COST_CAT;
END
 ^
CREATE TRIGGER SUB_JOB_FILE_UPDATE FOR SUB_JOB_FILE                    
ACTIVE BEFORE UPDATE POSITION 0 
as
declare variable wInt1 Integer;
declare variable wInt2 Integer;
begin
  if ((old.job_no_1 <> new.job_no_1)
     or (old.job_no_2 <> new.job_no_2)
     or (old.sub_job_no <> new.sub_job_no)) then
  begin
    update Job_COST_CAT
      set  Job_No_1 = new.Job_No_1,
           Job_No_2 = new.Job_No_2,
           sub_job_no = new.sub_job_no
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

    update fwo_cost_analysis
      set  Job_No_1 = new.Job_No_1,
           Job_No_2 = new.Job_No_2,
           sub_job_no = new.sub_job_no
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

    update  Job_detail
      set  Job_No_1 = new.Job_No_1,
           Job_No_2 = new.Job_No_2,
           sub_job_no = new.sub_job_no
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

    update Job_fwo
      set  Job_No_1 = new.Job_No_1,
           Job_No_2 = new.Job_No_2,
           sub_job_no = new.sub_job_no
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

    update Job_claim
      set  Job_No_1 = new.Job_No_1,
           Job_No_2 = new.Job_No_2,
           sub_job_no = new.sub_job_no
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

    update subcontract
      set  Job_No_1 = new.Job_No_1,
           Job_No_2 = new.Job_No_2,
           sub_job_no = new.sub_job_no
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;
  end
end
 ^
CREATE TRIGGER SUB_JOB_FILE_DELETE FOR SUB_JOB_FILE                    
ACTIVE AFTER UPDATE POSITION 0 
AS
BEGIN
  delete from Job_COST_CAT
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

  delete from fwo_cost_analysis
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

  delete from Job_detail
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

  delete from Job_fwo
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

  delete from Job_claim
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;

  delete from subcontract
    where Job_No_1 = old.Job_No_1
      and Job_No_2 = old.Job_No_2
      and sub_job_no = old.sub_job_no ;


END
 ^
CREATE TRIGGER FWO_COST_CAT_UPDATE FOR FWO_COST_CAT                    
ACTIVE AFTER UPDATE POSITION 0 
as
declare variable wInt1 Integer;
declare variable wInt2 Integer;
begin
  wInt1 = new.JOB_REG_QTY;
  wInt2 = (new.JOB_REG_Qty - wInt1) * 1000000;
  new.JOB_REG_Qty = wInt1 + (wInt2 / 1000000);

  wInt1 = new.JOB_REG_AMT;
  wInt2 = (new.JOB_REG_AMT - wInt1) * 1000000;
  new.JOB_REG_AMT = wInt1 + (wInt2 / 1000000);

  wInt1 = new.JOB_PREM_QTY;
  wInt2 = (new.JOB_PREM_QTY - wInt1) * 1000000;
  new.JOB_PREM_QTY = wInt1 + (wInt2 / 1000000);

  wInt1 = new.JOB_PREM_AMT;
  wInt2 = (new.JOB_PREM_AMT - wInt1) * 1000000;
  new.JOB_PREM_AMT = wInt1 + (wInt2 / 1000000);

end
 ^
CREATE TRIGGER FWO_COST_CAT_INSERT FOR FWO_COST_CAT                    
ACTIVE BEFORE INSERT POSITION 0 
as
declare variable wInt1 Integer;
declare variable wInt2 Integer;
begin
  wInt1 = new.JOB_REG_QTY;
  wInt2 = (new.JOB_REG_Qty - wInt1) * 1000000;
  new.JOB_REG_Qty = wInt1 + (wInt2 / 1000000);

  wInt1 = new.JOB_REG_AMT;
  wInt2 = (new.JOB_REG_AMT - wInt1) * 1000000;
  new.JOB_REG_AMT = wInt1 + (wInt2 / 1000000);

  wInt1 = new.JOB_PREM_QTY;
  wInt2 = (new.JOB_PREM_QTY - wInt1) * 1000000;
  new.JOB_PREM_QTY = wInt1 + (wInt2 / 1000000);

  wInt1 = new.JOB_PREM_AMT;
  wInt2 = (new.JOB_PREM_AMT - wInt1) * 1000000;
  new.JOB_PREM_AMT = wInt1 + (wInt2 / 1000000);

end
 ^
CREATE TRIGGER FWO_COST_ANALYSIS_UPDATE FOR FWO_COST_ANALYSIS               
ACTIVE AFTER UPDATE POSITION 0 
as
declare variable wInt1 Integer;
declare variable wInt2 Integer;
begin
  wInt1 = new.Budget_Qty;
  wInt2 = (new.Budget_Qty - wInt1) * 1000000;
  new.Budget_Qty = wInt1 + (wInt2 / 1000000);

  wInt1 = new.ACTUAL_QTY;
  wInt2 = (new.ACTUAL_QTY - wInt1) * 1000000;
  new.ACTUAL_QTY = wInt1 + (wInt2 / 1000000);

  wInt1 = new.STD_QTY;
  wInt2 = (new.STD_Qty - wInt1) * 1000000;
  new.STD_Qty = wInt1 + (wInt2 / 1000000);


end
 ^
CREATE TRIGGER FWO_COST_ANALYSIS_INSERT FOR FWO_COST_ANALYSIS               
ACTIVE BEFORE INSERT POSITION 0 
as
declare variable wInt1 Integer;
declare variable wInt2 Integer;
begin
  wInt1 = new.Budget_Qty;
  wInt2 = (new.Budget_Qty - wInt1) * 1000000;
  new.Budget_Qty = wInt1 + (wInt2 / 1000000);


  wInt1 = new.ACTUAL_QTY;
  wInt2 = (new.ACTUAL_QTY - wInt1) * 1000000;
  new.ACTUAL_QTY = wInt1 + (wInt2 / 1000000);

  wInt1 = new.STD_QTY;
  wInt2 = (new.STD_Qty - wInt1) * 1000000;
  new.STD_Qty = wInt1 + (wInt2 / 1000000);


end
 ^
CREATE TRIGGER FWO_UPDATE FOR FWO_CAT                         
ACTIVE AFTER UPDATE POSITION 0 
AS
BEGIN
  if (old.FWO_CAT <> new.FWO_CAT) then
  begin
    update Job_Fwo
      set FWO_CAT = new.FWO_CAT
      where FWO_CAT = old.FWO_CAT;
  end
END
 ^
COMMIT WORK ^
SET TERM ; ^

/* Grant permissions for this database */
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON FWO_CAT TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON FWO_COST_ANALYSIS TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON FWO_COST_CAT TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON FWO_QUOT TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JCCONTROL TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOB_CLAIM TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOB_COST_CAT TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOB_COST_FILE TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOB_COST_TYPE TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOB_DETAIL TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOB_FILE TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOB_FWO TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON SUBCONTRACT TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON SUBCONTRACT_DETAIL TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON SUB_JOB_FILE TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON VIEW_JOB_COST_CAT_BY_JOB TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON WORK_GROUP TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_COST_CAT_TOT_BY_SUB_JOB TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_COST_CAT_VIEW_BY_JOB TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_FWO_COST_CAT_TOT_BY_FWO TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_JOBNO TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_JOB_COST_CAT_BY_JOB TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_JOB_COST_CAT_TOT_BY_CAT TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_JOB_COST_CAT_TOT_BY_JOB TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_JOB_NO TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_SUB_FWO TO PUBLIC;
GRANT EXECUTE ON PROCEDURE GET_SUB_JOB_TOT_BY_JOB TO PUBLIC;

